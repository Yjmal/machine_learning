opts_chunk$set(echo=TRUE,
cache=FALSE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE,
class.source="badCode")
library(knitr)
## Global options
options(max.print="75")
opts_chunk$set(echo=TRUE,
cache=FALSE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE,
class.source="badCode")
opts_knit$set(width=75)
opts_chunk$set(echo=TRUE,
cache=FALSE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE,
class.source="badCode")
opts_knit$set(width=75)
```{r setup, echo=FALSE, cache=TRUE, message=F,warning=F}
## Pour faire le TP
library(mclust)
library(ggplot2)
library(ggplot2)
library(gridExtra)
library(FactoMineR)
library(factoextra)
library(reticulate)
library(reticulate)
library(reshape2)
## Pour faire le TP
library(mclust)
library(ggplot2)
library(gridExtra)
library(FactoMineR)
library(factoextra)
library(reticulate)
library(reshape2)
reticulate::repl_python()
n<- 500
a<- 3
mu<-c(-a,0,a)
b<- 5
sigma<-c(b,0.5,b)
prop<-c(1,2,3)
n<- 500
X<-data.frame(X=c(rnorm(prop[1]*n,mu[1],sigma[1]),
rnorm(prop[2]*n,mu[2],sigma[2]),
rnorm(prop[3]*n,mu[3],sigma[3])))
labeltrue<-c(rep(1,prop[1]*n),rep(2,prop[2]*n),rep(3,prop[3]*n))
a<- 3
mu<-c(-a,0,a)
b<- 5
sigma<-c(b,0.5,b)
prop<-c(1,2,3)
n<- 500
X<-data.frame(X=c(rnorm(prop[1]*n,mu[1],sigma[1]),
rnorm(prop[2]*n,mu[2],sigma[2]),
rnorm(prop[3]*n,mu[3],sigma[3])))
labeltrue<-c(rep(1,prop[1]*n),rep(2,prop[2]*n),rep(3,prop[3]*n))
aux<-seq(-(a+4),a+4,0.01)
Y<-data.frame(x=aux,
y1=(prop[1]*dnorm(aux,mu[1],sigma[1])),
y2=(prop[2]*dnorm(aux,mu[2],sigma[2])),
y3=(prop[3]*dnorm(aux,mu[3],sigma[3])))
gvrai<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=Y,col="red")+
geom_line(aes(x=x,y=y2),data=Y,col="blue")+
geom_line(aes(x=x,y=y3),data=Y,col="green")
gvrai
# A completer
res<-Mclust(X,G=3)
```{r, eval=F}
Y<-data.frame(x=aux,
y1=(prop[1]*dnorm(aux,mu[1],sigma[1])),
y2=(prop[2]*dnorm(aux,mu[2],sigma[2])),
y3=(prop[3]*dnorm(aux,mu[3],sigma[3])))
gvrai<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=Y,col="red")+
geom_line(aes(x=x,y=y2),data=Y,col="blue")+
geom_line(aes(x=x,y=y3),data=Y,col="green")
gvrai
aux<-seq(-(a+4),a+4,0.01)
Y<-data.frame(x=aux,
y1=(prop[1]*dnorm(aux,mu[1],sigma[1])),
y2=(prop[2]*dnorm(aux,mu[2],sigma[2])),
y3=(prop[3]*dnorm(aux,mu[3],sigma[3])))
gvrai<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=Y,col="red")+
geom_line(aes(x=x,y=y2),data=Y,col="blue")+
geom_line(aes(x=x,y=y3),data=Y,col="green")
gvrai
MelEstim<-data.frame(x=aux,
y1=res$pro[1] * dnorm(aux,mean = res$mean, sd =res$variance),
y2=res$pro[2] * dnorm(aux,mean = res$mean, sd =res$variance),
y3=res$pro[3] * dnorm(aux,mean = res$mean, sd =res$variance))
MelEstim<-data.frame(x=aux,
y1=res$pro[1] * dnorm(aux,mean = res$mean[1], sd =res$variance[1]),
y2=res$pro[2] * dnorm(aux,mean = res$mean[2], sd =res$variance[2]),
y3=res$pro[3] * dnorm(aux,mean = res$mean[3], sd =res$variance[3]))
res$mean
# A completer
res<-Mclust(X,G=3)
res$mean
res.mean
res$mean
# A completer
res<-Mclust(X,G=3)
res$mean
res$pro
# A completer
res<-Mclust(X,G=3)
res$pro
MelEstim<-data.frame(x=aux,
y1=res$pro[1] * dnorm(aux,mean = res$parameters$mean[1], sd =res$parameters$variance[1]),
y2=res$pro[2] * dnorm(aux,mean = res$parameters$mean[2], sd =res$parameters$variance[2]),
y3=res$pro[3] * dnorm(aux,mean = res$parameters$mean[3], sd =res$parameters$variance[3]))
res$parameters$pro
MelEstim<-data.frame(x=aux,
y1=res$parameters$pro[1] * dnorm(aux,mean = res$parameters$mean[1], sd =res$parameters$variance[1]),
y2=res$pro[2] * dnorm(aux,mean = res$parameters$mean[2], sd =res$parameters$variance[2]),
y3=res$pro[3] * dnorm(aux,mean = res$parameters$mean[3], sd =res$parameters$variance[3]))
prop<-c(1000,1000,1000)
a<- 3
mu<-c(-a,0,a)
b<- 5
sigma<-c(b,0.5,b)
prop<-c(1000,1000,1000)
n<- 500
X<-data.frame(X=c(rnorm(prop[1]*n,mu[1],sigma[1]),
rnorm(prop[2]*n,mu[2],sigma[2]),
rnorm(prop[3]*n,mu[3],sigma[3])))
labeltrue<-c(rep(1,prop[1]*n),rep(2,prop[2]*n),rep(3,prop[3]*n))
aux<-seq(-(a+4),a+4,0.01)
Y<-data.frame(x=aux,
y1=(prop[1]*dnorm(aux,mu[1],sigma[1])),
y2=(prop[2]*dnorm(aux,mu[2],sigma[2])),
y3=(prop[3]*dnorm(aux,mu[3],sigma[3])))
gvrai<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=Y,col="red")+
geom_line(aes(x=x,y=y2),data=Y,col="blue")+
geom_line(aes(x=x,y=y3),data=Y,col="green")
gvrai
aux<-seq(-(a+4),a+4,0.01)
Y<-data.frame(x=aux,
y1=(prop[1]*dnorm(aux,mu[1],sigma[1])),
y2=(prop[2]*dnorm(aux,mu[2],sigma[2])),
y3=(prop[3]*dnorm(aux,mu[3],sigma[3])))
gvrai<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=Y,col="red")+
geom_line(aes(x=x,y=y2),data=Y,col="blue")+
geom_line(aes(x=x,y=y3),data=Y,col="green")
gvrai
aux<-seq(-(a+4),a+4,0.01)
Y<-data.frame(x=aux,
y1=(prop[1]*dnorm(aux,mu[1],sigma[1])),
y2=(prop[2]*dnorm(aux,mu[2],sigma[2])),
y3=(prop[3]*dnorm(aux,mu[3],sigma[3])))
gvrai<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=Y,col="red")+
geom_line(aes(x=x,y=y2),data=Y,col="blue")+
geom_line(aes(x=x,y=y3),data=Y,col="green")
gvrai
a<- 3
mu<-c(-a,0,a)
b<- 5
sigma<-c(b,0.5,b)
prop<-c(1000,1000,1000)
n<- 500
X<-data.frame(X=c(rnorm(prop[1]*n,mu[1],sigma[1]),
rnorm(prop[2]*n,mu[2],sigma[2]),
rnorm(prop[3]*n,mu[3],sigma[3])))
labeltrue<-c(rep(1,prop[1]*n),rep(2,prop[2]*n),rep(3,prop[3]*n))
a<- 3
mu<-c(-a,0,a)
b<- 5
sigma<-c(b,0.5,b)
prop<-c(1000,1000,1000)
n<- 500
X<-data.frame(X=c(rnorm(prop[1]*n,mu[1],sigma[1]),
rnorm(prop[2]*n,mu[2],sigma[2]),
rnorm(prop[3]*n,mu[3],sigma[3])))
labeltrue<-c(rep(1,prop[1]*n),rep(2,prop[2]*n),rep(3,prop[3]*n))
```{r, eval=F}
aux<-seq(-(a+4),a+4,0.01)
Y<-data.frame(x=aux,
y1=(prop[1]*dnorm(aux,mu[1],sigma[1])),
y2=(prop[2]*dnorm(aux,mu[2],sigma[2])),
y3=(prop[3]*dnorm(aux,mu[3],sigma[3])))
gvrai<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=Y,col="red")+
geom_line(aes(x=x,y=y2),data=Y,col="blue")+
geom_line(aes(x=x,y=y3),data=Y,col="green")
gvrai
# A completer
res<-Mclust(X,G=3)
# A completer
res<-Mclust(X,G=3)
res$parameters$pro
MelEstim<-data.frame(x=aux,
y1=res$parameters$pro[1] * dnorm(aux,mean = res$parameters$mean[1], sd =res$parameters$variance[1]),
y2=res$pro[2] * dnorm(aux,mean = res$parameters$mean[2], sd =res$parameters$variance[2]),
y3=res$pro[3] * dnorm(aux,mean = res$parameters$mean[3], sd =res$parameters$variance[3]))
MelEstim<-data.frame(x=aux,
y1=res$parameters$pro[1] * dnorm(aux,mean = res$parameters$mean[1], sd =res$parameters$variance[1]),
y2=res$parameters$pro[2] * dnorm(aux,mean = res$parameters$mean[2], sd =res$parameters$variance[2]),
y3=res$parameters$pro[3] * dnorm(aux,mean = res$parameters$mean[3], sd =res$parameters$variance[3]))
MelEstim<-data.frame(MelEstim,Somme=apply(MelEstim[,2:4],1,sum))
MelEstim<-data.frame(x=aux,
y1=res$parameters$pro[1] * dnorm(aux,mean = res$parameters$mean[1], sd =res$parameters$variance[1]),
y2=res$parameters$pro[2] * dnorm(aux,mean = res$parameters$mean[2], sd =res$parameters$variance[2]),
y3=res$parameters$pro[3] * dnorm(aux,mean = res$parameters$mean[3], sd =res$parameters$variance[3]))
library(knitr)
## Global options
options(max.print="75")
opts_chunk$set(echo=TRUE,
cache=FALSE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE,
class.source="badCode")
opts_knit$set(width=75)
## Pour faire le TP
library(mclust)
library(ggplot2)
library(FactoMineR)
library(factoextra)
library(reticulate)
library(reticulate)
library(reshape2)
## Pour faire le TP
library(mclust)
library(ggplot2)
library(gridExtra)
library(FactoMineR)
library(factoextra)
library(reticulate)
library(reshape2)
reticulate::repl_python()
a<- 3
mu<-c(-a,0,a)
b<- 5
sigma<-c(b,0.5,b)
prop<-c(1000,1000,1000)
n<- 500
X<-data.frame(X=c(rnorm(prop[1]*n,mu[1],sigma[1]),
rnorm(prop[2]*n,mu[2],sigma[2]),
rnorm(prop[3]*n,mu[3],sigma[3])))
labeltrue<-c(rep(1,prop[1]*n),rep(2,prop[2]*n),rep(3,prop[3]*n))
a<- 3
mu<-c(-a,0,a)
b<- 5
sigma<-c(b,0.5,b)
prop<-c(1000,1000,1000)
n<- 500
X<-data.frame(X=c(rnorm(prop[1]*n,mu[1],sigma[1]),
rnorm(prop[2]*n,mu[2],sigma[2]),
rnorm(prop[3]*n,mu[3],sigma[3])))
labeltrue<-c(rep(1,prop[1]*n),rep(2,prop[2]*n),rep(3,prop[3]*n))
aux<-seq(-(a+4),a+4,0.01)
Y<-data.frame(x=aux,
y1=(prop[1]*dnorm(aux,mu[1],sigma[1])),
y2=(prop[2]*dnorm(aux,mu[2],sigma[2])),
y3=(prop[3]*dnorm(aux,mu[3],sigma[3])))
gvrai<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=Y,col="red")+
geom_line(aes(x=x,y=y2),data=Y,col="blue")+
geom_line(aes(x=x,y=y3),data=Y,col="green")
gvrai
# A completer
res<-Mclust(X,G=3)
# A completer
res<-Mclust(X,G=3)
res$parameters$pro
MelEstim<-data.frame(x=aux,
y1=res$parameters$pro[1] * dnorm(aux,mean = res$parameters$mean[1], sd =res$parameters$variance[1]),
y2=res$parameters$pro[2] * dnorm(aux,mean = res$parameters$mean[2], sd =res$parameters$variance[2]),
y3=res$parameters$pro[3] * dnorm(aux,mean = res$parameters$mean[3], sd =res$parameters$variance[3]))
res$parameters$mean[1]
res$parameters$variance[1]
res$parameters$variance
MelEstim<-data.frame(x=aux,
y1=res$parameters$pro[1] * dnorm(aux,mean = res$parameters$mean[1], sd =res$parameters$variance$sigmasq[1]),
y2=res$parameters$pro[2] * dnorm(aux,mean = res$parameters$mean[2], sd =res$parameters$variance$sigmasq[2]),
y3=res$parameters$pro[3] * dnorm(aux,mean = res$parameters$mean[3], sd =res$parameters$variance$sigmasq[3]))
MelEstim<-data.frame(MelEstim,Somme=apply(MelEstim[,2:4],1,sum))
gMelEst<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=MelEstim,col="red")+
geom_line(aes(x=x,y=y2),data=MelEstim,col="blue")+
geom_line(aes(x=x,y=y3),data=MelEstim,col="green")+
geom_line(aes(x=x,y=Somme),data=MelEstim,col="cyan",linetype = "dashed",size=1.5)
gMelEst
library(mclust)
data(Baudry_etal_2010_JCGS_examples)
Data<-ex4.1
ggplot(Data,aes(x=X1,y=X2))+geom_point()
# A COMPLETER
resBICdiag<-Mclust(Data,G = 4)
resBICdiag$parameters$mean
fviz_mclust(resBICdiag,what="BIC")
summary(resBICdiag)
# Visualisation du clustering
fviz_cluster(resBICdiag)
# Effectifs par classe
table(resBICdiag)
# Effectifs par classe
table(resBICdiag$classification)
resICL<-mclustICL(data)
resICL<-mclustICL(Data)
summary(resICL)
fviz_mclust(resBICdiag,what="BIC")
fviz_mclust(resBICdiag,what="BIC")
summary(resBICdiag)
# Visualisation du clustering
fviz_cluster(resBICdiag)
reticulate::repl_python()
wine<-read.table("wine.txt",header=T)
wine$Qualite = as.factor(wine$Qualite)
wine<-read.table("wine.txt",header=T)
wine$Qualite = as.factor(wine$Qualite)
wine$Type = factor(wine$Type, labels = c("blanc", "rouge"))
wineinit<-wine
wine[,-c(1,2)]<-scale(wine[,-c(1,2)],center=T,scale=T)
head(wine)
resacp<-PCA(wine,quali.sup=c(1,2), scale.unit = TRUE,graph=FALSE)
reticulate::repl_python()
wine<-read.table("wine.txt",header=T)
wine$Qualite = as.factor(wine$Qualite)
wine$Type = factor(wine$Type, labels = c("blanc", "rouge"))
wineinit<-wine
wine[,-c(1,2)]<-scale(wine[,-c(1,2)],center=T,scale=T)
head(wine)
resacp<-PCA(wine,quali.sup=c(1,2), scale.unit = TRUE,graph=FALSE)
reticulate::repl_python()
wine<-read.table("wine.txt",header=T)
wine$Qualite = as.factor(wine$Qualite)
wine$Type = factor(wine$Type, labels = c("blanc", "rouge"))
wineinit<-wine
wine[,-c(1,2)]<-scale(wine[,-c(1,2)],center=T,scale=T)
head(wine)
head(wine)
resacp<-PCA(wine,quali.sup=c(1,2), scale.unit = TRUE,graph=FALSE)
reticulate::repl_python()
